import CrawlState, { Exploit } from '../state.ts'
import { setupState, jack } from '../../utilities/testing/crew.ts'
import twistExploit from './twist.ts'

describe('addExploit',  () => {
  let state: CrawlState
  const twist = 'Calico Jack stole a Spanish warship right from Havana’s port.'
  const exploit: Exploit = {
    history: 'Calico Jack slipped past a Spanish warship.',
    legend: ['Calico Jack captured a Spanish warship.']
  }

  beforeEach(() => {
    state = setupState()
    state.exploits[jack] = [exploit]
  })

  it('twists a captain’s exploit', async () => {
    const updated = await twistExploit(jack, 0, twist, state, false)
    const { history, legend } = updated!.exploits[jack][0]

    expect(history).toBe(exploit.history)
    expect(legend[0]).toBe(exploit.legend[0])
    expect(legend[1]).toBe(twist)
  })

  it('returns null if there is no such captain', async () => {
    const updated = await twistExploit('nope', 0, twist, state, false)
    expect(updated).toBeNull()
  })

  it('returns null if the captain has no such exploit', async () => {
    const updated = await twistExploit(jack, 1, twist, state, false)
    expect(updated).toBeNull()
  })
})

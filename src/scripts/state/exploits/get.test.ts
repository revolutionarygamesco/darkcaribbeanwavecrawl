import CrawlState, { Exploit } from '../state.ts'
import { setupState, jack } from '../../utilities/testing/crew.ts'
import getExploits from './get.ts'

describe('getExploits',  () => {
  let state: CrawlState
  const exploit: Exploit = {
    history: 'Calico Jack slipped past a Spanish warship.',
    legend: ['Calico Jack captured a Spanish warship.']
  }

  beforeEach(() => {
    state = setupState()
    state.exploits[jack] = [exploit]
  })

  it('gets a captain’s exploits', async () => {
    expect(await getExploits(jack, state)).toEqual([exploit])
  })

  it('gets the current captain’s exploits by default', async () => {
    expect(await getExploits(undefined, state)).toEqual([exploit])
  })

  it('returns an empty array if captain has no exploits', async () => {
    delete state.exploits[jack]
    expect(await getExploits(undefined, state)).toEqual([])
  })

  it('returns null if there is no such captain', async () => {
    expect(await getExploits('nope', state)).toEqual([])
  })
})
